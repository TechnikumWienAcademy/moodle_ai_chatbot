define("mod_openaichat/lib",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;var questionString="Ask a question...",errorString="An error occurred! Please try again later.";_exports.init=data=>{console.log("start");const modId=data.modId,api_type=data.api_type,persistConvo=data.persistConvo,userId=data.userId;if("assistant"===api_type&&(chatData=localStorage.getItem("mod_openaichat_data"),console.log(chatData),chatData?(chatData=JSON.parse(chatData),chatData[modId]&&chatData[modId].threadId&&"1"===persistConvo?(console.log("here"),fetch("".concat(M.cfg.wwwroot,"/mod/openaichat/api/thread.php?modId=").concat(modId,"&thread_id=").concat(chatData[modId].threadId)).then((response=>response.json())).then((data=>{console.log(data);for(let message of data)addToChatLog("user"===message.role?"user":"bot",message.message)})).catch((error=>{chatData[modId]={},localStorage.setItem("mod_openaichat_data",JSON.stringify(chatData))}))):chatData[modId]={}):chatData={[modId]:{}},localStorage.setItem("mod_openaichat_data",JSON.stringify(chatData))),0==checkUserLimit(modId,userId))return disableButton();-1!==checkUserLimit(modId,userId)&&(console.log(checkUserLimit(modId,userId)),document.querySelector("#remaining-questions").innerText="You have "+checkUserLimit(modId,userId)+" question(s) remaining."),document.querySelector("#openai_input").addEventListener("keyup",(e=>{if(13===e.which&&""!==e.target.value){if(0==checkUserLimit(modId,userId))return disableButton();addToChatLog("user",e.target.value),createCompletion(e.target.value,modId,api_type,userId),e.target.value=""}})),document.querySelector(".mod_openaichat #go").addEventListener("click",(e=>{const input=document.querySelector("#openai_input");if(""!==input.value){if(0==checkUserLimit(modId,userId))return disableButton();addToChatLog("user",input.value),createCompletion(input.value,modId,api_type,userId),input.value=""}})),document.querySelector(".mod_openaichat #refresh").addEventListener("click",(e=>{clearHistory(modId)})),require(["core/str"],(function(str){str.get_strings([{key:"askaquestion",component:"mod_openaichat_data"},{key:"erroroccurred",component:"mod_openaichat_data"}]).then((results=>{questionString=results[0],errorString=results[1]}))}))};const addToChatLog=(type,message)=>{let messageContainer=document.querySelector("#openai_chat_log");const messageElem=document.createElement("div");messageElem.classList.add("openai_message");for(let className of type.split(" "))messageElem.classList.add(className);const messageText=document.createElement("span");messageText.innerHTML=message,messageElem.append(messageText),messageContainer.append(messageElem),messageText.offsetWidth&&(messageElem.style.width=messageText.offsetWidth+40+"px"),messageContainer.scrollTop=messageContainer.scrollHeight},clearHistory=modId=>{chatData=localStorage.getItem("mod_openaichat_data"),chatData&&(chatData=JSON.parse(chatData),chatData[modId]&&(chatData[modId]={},localStorage.setItem("mod_openaichat_data",JSON.stringify(chatData)))),document.querySelector("#openai_chat_log").innerHTML=""},createCompletion=(message,modId,api_type,userId)=>{let chatData,threadId=null;if(0==checkUserLimit(modId,userId))return disableButton();"assistant"===api_type&&(chatData=localStorage.getItem("mod_openaichat_data"),chatData?(chatData=JSON.parse(chatData),chatData[modId]&&(threadId=chatData[modId].threadId||null)):chatData={[modId]:{}});const history=buildTranscript();document.querySelector(".mod_openaichat #control_bar").classList.add("disabled"),document.querySelector("#openai_input").classList.remove("error"),document.querySelector("#openai_input").placeholder=questionString,document.querySelector("#openai_input").blur(),addToChatLog("bot loading","..."),fetch("".concat(M.cfg.wwwroot,"/mod/openaichat/api/completion.php"),{method:"POST",body:JSON.stringify({message:message,history:history,modId:modId,threadId:threadId})}).then((response=>{let messageContainer=document.querySelector("#openai_chat_log");if(messageContainer.removeChild(messageContainer.lastElementChild),document.querySelector(".mod_openaichat #control_bar").classList.remove("disabled"),response.ok)return response.json();throw Error(response.statusText)})).then((data=>{try{console.log(data),storeUserLog(modId,message,data.message),addToChatLog("bot",data.message),data.thread_id&&(chatData[modId].threadId=data.thread_id,localStorage.setItem("mod_openaichat_data",JSON.stringify(chatData)))}catch(error){console.log(error),addToChatLog("bot",data.error.message)}setTimeout((function(){if(0==checkUserLimit(modId,userId))return disableButton();-1!==checkUserLimit(modId,userId)&&(document.querySelector("#remaining-questions").innerText="You have "+checkUserLimit(modId,userId)+" question(s) remaining."),document.querySelector("#openai_input").focus()}),50)})).catch((error=>{console.log(error),document.querySelector("#openai_input").classList.add("error"),document.querySelector("#openai_input").placeholder=errorString}))},buildTranscript=()=>{let transcript=[];return document.querySelectorAll(".openai_message").forEach(((message,index)=>{if(index===document.querySelectorAll(".openai_message").length-1)return;let user=userName;message.classList.contains("bot")&&(user=assistantName),transcript.push({user:user,message:message.innerText})})),transcript},storeUserLog=(modId,requestMessage,responseMessage)=>{$.ajax({method:"POST",url:"".concat(M.cfg.wwwroot,"/mod/openaichat/api/record_log.php"),data:{modId:modId,requestMessage:requestMessage,responseMessage:responseMessage},dataType:"text"})},checkUserLimit=(modId,userId)=>$.ajax({method:"POST",url:"".concat(M.cfg.wwwroot,"/mod/openaichat/api/question_counter.php"),data:{modId:modId,userId:userId},dataType:"JSON",async:!1,success:function(result){a=result}}).responseJSON;function disableButton(){return document.querySelector(".mod_openaichat #control_bar").classList.add("disabled"),document.querySelector("#openai_input").classList.add("error"),document.querySelector("#openai_input").placeholder="Limit reached",document.querySelector("#remaining-questions").style.display="none",!1}}));

//# sourceMappingURL=lib.min.js.map